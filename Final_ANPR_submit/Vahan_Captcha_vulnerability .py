#!/usr/bin/env python
# coding: utf-8

# In[34]:


from selenium import webdriver
from selenium.webdriver.common.keys import Keys
import time
import datetime
import csv
from urllib.request import urlretrieve
import pytesseract
import os, io
from google.cloud import vision
import pandas as pd


# In[43]:


driver = webdriver.Chrome('./chromedriver')
for i in range(1):
    
    driver.get("https://vahan.nic.in/nrservices/faces/user/searchstatus.xhtml")
    #driver.minimize_window()
    status = "Failure"
    fields = []
    
    dt_string = datetime.datetime.now()
    
    fields.append(dt_string)

    
    captcha = driver.find_element_by_id("capatcha").find_element_by_tag_name('img')
    src = captcha.get_attribute('src')
    print(src)
    urllib.request.urlretrieve(src, "captcha.jpg")
    
    

    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = r"ServiceAccountToken-2.json"

    client = vision.ImageAnnotatorClient()

    file_name = 'captcha.jpg'
    image_path = file_name

    with io.open(image_path, 'rb') as image_file:
        content = image_file.read()

    # construct an iamge instance
    image = vision.types.Image(content=content)

    # annotate Image Response
    response = client.text_detection(image=image)  # returns TextAnnotation
    df = pd.DataFrame(columns=['locale', 'description'])

    texts = response.text_annotations
    for text in texts:
        df = df.append(
            dict(
                locale=text.locale,
                description=text.description
            ),
            ignore_index=True
        )

    print(df['description'][0])    
    captcha = df['description'][0].split("=",1)
    print(captcha)


# In[ ]:



    print(captcha)
    
    fields.append(captcha)
    

        
    if captcha[0].isdigit():
        equation = str("".join(captcha))
        captcha_result = eval(equation)
    else:
        if str(captcha[3]) == "greater":
captcha_result = min(captcha[4],captcha[6])
        else:
captcha_result = max(captcha[4],captcha[6])
        
    reg_no_search_bar =driver.find_element_by_id('regn_no1_exact')
    captcha_search_bar =driver.find_element_by_id('txt_ALPHA_NUMERIC')

    time.sleep(1)
    
    
    #Regno generator 
    
    

    reg_no_search_bar.send_keys("KA01MA0400")
    captcha_search_bar.send_keys(captcha_result)
    
    fields.append(captcha_result)
    
    search_button = driver.find_element_by_id('page-wrapper').find_element_by_tag_name('button')

    search_button.click()

    time.sleep(3)

    if driver.find_element_by_id('resultPanel'):
        status = "Success"

    
   #write to csv file
    
    fields.append(status)
    with open(r'captcha_samples.csv', 'a') as f:
        writer = csv.writer(f)
        writer.writerow(fields)
        
    
    
   


# In[ ]:




